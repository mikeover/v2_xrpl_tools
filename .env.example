# Application
NODE_ENV=development
PORT=3110

# Database Configuration
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=xrpl_nft_monitor

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=xrpl:
REDIS_TTL=3600
REDIS_MAX_RETRIES=3

# RabbitMQ Configuration
RABBITMQ_URL=amqp://rabbitmq:rabbitmq@localhost:5672
RABBITMQ_PREFETCH_COUNT=10

# XRPL Connection (REQUIRED - Without this, no monitoring will occur)
# Use comma-separated list for multiple nodes
XRPL_WSS_URLS=wss://xrplcluster.com,wss://s2.ripple.com
XRPL_NETWORK=mainnet
XRPL_RECONNECT_INTERVAL=5000
XRPL_MAX_RECONNECT_ATTEMPTS=10
XRPL_HEALTH_CHECK_INTERVAL=30000
XRPL_CONNECTION_TIMEOUT=10000
XRPL_MAX_CONSECUTIVE_FAILURES=3

# JWT Authentication
JWT_SECRET=change-this-to-a-very-long-random-string-in-production
JWT_EXPIRATION=7d
JWT_REFRESH_TOKEN_SECRET=another-very-long-random-string-for-refresh-tokens
JWT_REFRESH_TOKEN_EXPIRATION=30d

# Security
BCRYPT_SALT_ROUNDS=10
THROTTLE_TTL=60000
THROTTLE_LIMIT=100
AUTH_THROTTLE_TTL=60000
AUTH_THROTTLE_LIMIT=5

# Notifications - Discord
DISCORD_WEBHOOK_URL=

# Notifications - Email (SendGrid)
SENDGRID_API_KEY=
EMAIL_FROM=noreply@example.com

# AWS S3 (Optional - for NFT image caching)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
S3_BUCKET_NAME=xrpl-nft-images

# Logging
LOG_LEVEL=info

# Performance Tuning
BATCH_SIZE=100
TRANSACTION_BATCH_INTERVAL=1000

# IPFS Gateways (comma-separated list)
IPFS_GATEWAYS=https://ipfs.io/ipfs/,https://cloudflare-ipfs.com/ipfs/,https://gateway.pinata.cloud/ipfs/

# HTTP Timeouts (ms)
HTTP_TIMEOUT=30000
HTTP_MAX_REDIRECTS=5

# Feature Flags
ENABLE_TIMESCALEDB=false
ENABLE_S3_CACHING=true
ENABLE_METADATA_ENRICHMENT=true

# Processing Mode (choose one)
# false = Direct XRPL subscription (simpler, working)
# true = Queue-based processing (more scalable, resilient)
USE_QUEUE_CONSUMERS=true